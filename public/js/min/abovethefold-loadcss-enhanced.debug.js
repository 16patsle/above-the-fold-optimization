Abtf[0](function(e,l){var c,u=e.document;l[19]=function(n,t,o){console.info("Abtf.css() ➤ loadCSS()[RAF] async download start",l[29](n));var r=u.createElement("link");if(c||!1===c||(c=document.getElementById("AbtfCSS"))||(c=!1),c)var e=c;else{var i=(u.body||u.getElementsByTagName("head")[0]).childNodes;e=i[i.length-1]}var a=u.styleSheets;r.rel="stylesheet",r.href=n;var d=!(r.media="only x"),f=function(e){if(!d){for(var n=r.href,t=a.length;t--&&!d;)if(a[t].href===n)return e();setTimeout(function(){f(e)})}};function s(){function e(){l[15](function(){r.media=t||"all",console.info("Abtf.css() ➤ loadCSS()[RAF] render",l[29](n)),o&&o()})}d||(d=!0,r.addEventListener&&r.removeEventListener("load",s),void 0!==l[5]&&0<parseInt(l[5])?(console.info("Abtf.css() ➤ loadCSS()[RAF] render delay",l[5],l[29](n)),setTimeout(e,l[5])):e())}return r.addEventListener?r.addEventListener("load",s):r.onload=s,function e(n){if(u.body)return n();setTimeout(function(){e(n)})}(function(){e.parentNode.insertBefore(r,e.nextSibling),f(s)}),r}});